#!/bin/bash

# transfer files from dist directory to the disk image

# @example
# copy "etc/timezone" from ./bootstrap-dist or ~/.bootstrap-dist to image
# RPI_DIST_COPY="/etc/timezone"

# @example
# copy directories "etc", "home" and "usr" from ./bootstrap-dist or ~/.bootstrap-dist to image
# RPI_DIST_COPY=( "/etc", "/home", "/usr" )

# default options
to_array RPI_DIST_COPY_ON_BAKE
to_array RPI_DIST_COPY_ON_LOGIN
to_array RPI_DIST_COPY_ON_BOOT


# load dependencies
plugin_load append || return 1
plugin_load run || return 1
plugin_load chmod || return 1
plugin_load chown || return 1


function rpi_dist_prerun() {
    {
        [[ -n "${RPI_DIST_COPY_ON_BAKE}" ]] || \
        [[ -n "${RPI_DIST_COPY_ON_BOOT}" ]] || \
        [[ -n "${RPI_DIST_COPY_ON_LOGIN}" ]] ;
    } || error "need at least one of RPI_DIST_COPY_ON_BAKE, _BOOT or _LOGIN"
    [[ -n "${RPI_DISTDIR}" ]] || error "RPI_DISTDIR not set"
    [[ -n "${RPI_IMG_DISTDIR}" ]] || error "RPI_IMG_DISTDIR not set"
}

function rpi_dist_run() {
    local f
    [[ -n "${RPI_DIST_COPY_ON_BAKE}" ]] && for f in "${RPI_DIST_COPY_ON_BAKE[@]}" ; do
        rpi_dist_cp_if_exist "${f}" || error "copy ${f}"
    done

    [[ -n "${RPI_DIST_COPY_ON_BOOT}" ]] && for f in "${RPI_DIST_COPY_ON_BOOT[@]}" ; do
        rpi_dist_cp_after_boot "${f}" || error "copy after boot ${f}"
    done

    [[ -n "${RPI_DIST_COPY_ON_LOGIN}" ]] && for f in "${RPI_DIST_COPY_ON_LOGIN[@]}" ; do
        rpi_dist_cp_after_login "${f}" || error "copy after login ${f}"
    done

    return 0
}

function rpi_dist_description() {
    echo "transfer files from dist directory to disk image"
}

function rpi_dist_help_params() {
    help_param "RPI_DIST_COPY_ON_LOGIN" "array of files to copy on first login"
    help_param "RPI_DIST_COPY_ON_BOOT" "array of files to copy on first boot"
    help_param "RPI_DIST_COPY_ON_BAKE" "array of files to copy during bake"
    help_param "RPI_DISTDIR" "path to directory where project stores distfiles"
    help_param "RPI_USER_DISTDIR" "path where user specific distfiles are stored"
    help_param "RPI_IMG_DISTDIR" "path relative to image root where distfiles are stored"
}

# ---------------------------------------------------------------------
# run command either after first login, boot or during image bake
function run_on() {
    local phase="$1"
    local cmd="$2"

    case "${phase}" in
        "login")
            log "registering ${path} for copying after login ..."
            rpi_run_on_first_login "${cmd[@]}"
            ;;

        "boot")
            log "registering ${path} for copying after boot ..."
            rpi_run_on_first_boot "${cmd[@]}"
            ;;
        ?|*)
            error "unknown run phase: ${phase}"
            ;;
    esac
}

# check if dist file exists
function rpi_dist_exist() {
    local file="$1"
    [[ -e "${RPI_DISTDIR}/${file}" ]] && return 0
    [[ -e "${RPI_USER_DISTDIR}/${file}" ]] && return 0
    return 1
}

# copy from dist directory to root directory
function rpi_dist_cp() {
    local path="$1"
    local dst="${RPI_ROOT}/${path}"
    [[ -n "${path}" ]] || error "missing path"
    log "copying ${path} ..."
    # directory?
    if [[ -d "${RPI_DISTDIR}/${path}" ]] ; then
        log "  ${RPI_DISTDIR}/${path}/* ${dst}"
        mkdir -p "${dst}" || error "mkdir ${dst} failed"
        sudo cp -r "${RPI_DISTDIR}/${path}/"* "${dst}" || error "cp -r ${path}/* to ${dst}"
    elif [[ -f "${RPI_DISTDIR}/${path}" ]] ; then
        log "  ${RPI_DISTDIR}/${path} -> ${dst}"
        mkdir -p "$(dirname "${dst}")" || error "mkdir $(dirname "${dst}") failed"
        sudo cp "${RPI_DISTDIR}/${path}" "${dst}" || error "cp ${path} to ${dst}"
    fi
    if [[ -d "${RPI_USER_DISTDIR}/${path}" ]] ; then
        log "  ${RPI_USER_DISTDIR}/${path}/* ${dst}"
        mkdir -p "${dst}" || error "mkdir ${dst} failed"
        sudo cp -r "${RPI_USER_DISTDIR}/${path}/"* "${dst}" || error "cp -r ${path}/* to ${dst}"
    elif [[ -f "${RPI_USER_DISTDIR}/${path}" ]] ; then
        log "  ${RPI_USER_DISTDIR}/${path} -> ${dst}"
        mkdir -p "$(dirname "${dst}")" || error "mkdir $(dirname "${dst}") failed"
        sudo cp "${RPI_USER_DISTDIR}/${path}" "${dst}" || error "cp ${path} to ${dst}"
    fi
}

# copy if srcfile exists
function rpi_dist_cp_if_exist() {
    local path="$1"
    if rpi_dist_exist "${path}" ; then
        rpi_dist_cp "${path}"
        return 0
    fi
    return 1
}

# copy to image dist dir and then to destination at login or boot
function rpi_dist_cp_image() {
    local phase="$1"
    local path="$2"
    local distdir="${RPI_ROOT}/${RPI_IMG_DISTDIR}"

    [[ -n "${path}" ]] || error "rpi_dist_cp_image: need path"

    # create directory?
    [[ -d "${distdir}" ]] || {
        sudo mkdir -p "${distdir}" || error "mkdir ${distdir}"
        rpi_chmod_pi "0770" "${RPI_IMG_DISTDIR}" || error "rpi_chmod_pi"
        rpi_chown_pi "${RPI_IMG_DISTDIR}" || error "rpi_chown_pi"
    }

    # copy from directory?
    if [[ -d "${RPI_USER_DISTDIR}/${path}" ]] || [[ -d "${RPI_DISTDIR}/${path}" ]] ; then
        # create dst path
        [[ -d "${distdir}/${path}" ]] || {
            sudo mkdir -p "${distdir}/${path}/" || error "mkdir"
            rpi_chown_pi "${RPI_IMG_DISTDIR}/${path}" || error "rpi_chown_pi"
        }
        # copy to image (from project distdir)
        [[ -d "${RPI_DISTDIR}/${path}" ]] && {
            verbose "cp -r ${RPI_DISTDIR}/${path}/* ${distdir}/${path}"
            sudo cp -r "${RPI_DISTDIR}/${path}"/* "${distdir}/${path}" || error "cp"
        }
        # copy to image (from user distdir in ~)
        [[ -d "${RPI_USER_DISTDIR}/${path}" ]] && {
            verbose "cp -r ${RPI_USER_DISTDIR}/${path}/* ${distdir}/${path}"
            sudo cp -r "${RPI_USER_DISTDIR}/${path}"/* "${distdir}/${path}"
        }
        # register copy command
        run_on "${phase}" "sudo cp -r \"${RPI_IMG_DISTDIR}/${path}/\"* \"/${path}\"" || error "run_on"
    # copy a file?
    else
        # create dst path
        [[ -d "${distdir}/$(dirname "${path}")" ]] || {
            sudo mkdir -p "${distdir}/$(dirname "${path}")" || error "mkdir"
        }
        # copy to image
        [[ -f "${RPI_DISTDIR}/${path}" ]] && {
            sudo cp -r "${RPI_DISTDIR}/${path}" "${distdir}/$(dirname "${path}")/" || error "cp"
        }
        [[ -f "${RPI_USER_DISTDIR}/${path}" ]] && {
            sudo cp -r "${RPI_USER_DISTDIR}/${path}" "${distdir}/$(dirname "${path}")/" || error "cp"
        }
        # register copy command
        run_on "${phase}" "sudo cp \"${RPI_IMG_DISTDIR}/${path}\" \"/$(dirname "${path}")/\"" || error "run_on"
    fi

}

# copy from dist directory after first boot
function rpi_dist_cp_after_boot() {
    rpi_dist_cp_image "boot" "$@"
}

# copy from dist directory after first login
function rpi_dist_cp_after_login() {
    rpi_dist_cp_image "login" "$@"
}
