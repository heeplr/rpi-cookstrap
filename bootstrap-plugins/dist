#!/bin/bash

# transfer files from dist directory to the disk image

# @example
# copy "etc/timezone" from ./bootstrap-dist or ~/.bootstrap-dist to image
# RPI_DIST_COPY="/etc/timezone"

# @example
# copy directories "etc", "home" and "usr" from ./bootstrap-dist or ~/.bootstrap-dist to image
# RPI_DIST_COPY=( "/etc", "/home", "/usr" )

# default options
to_array RPI_DIST_COPY
to_array RPI_DIST_APPEND

# load dependencies
plugin_load append || return 1
plugin_load run || return 1
plugin_load chmod || return 1
plugin_load chown || return 1


function rpi_dist_prerun() {
    true
}

function rpi_dist_run() {
    local f
    [[ -n "${RPI_DIST_COPY}" ]] && for f in "${RPI_DIST_COPY[@]}" ; do
        rpi_dist_cp_if_exist "${f}" || error "copy ${f}"
    done

    [[ -n "${RPI_DIST_COPY_BOOT}" ]] && for f in "${RPI_DIST_COPY_BOOT[@]}" ; do
        rpi_dist_cp_after_boot "${f}" || error "copy after boot ${f}"
    done

    [[ -n "${RPI_DIST_APPEND}" ]] && for f in "${RPI_DIST_APPEND[@]}" ; do
        rpi_append_file_to_file "${f}" "${RPI_ROOT}/${f}" || error "append ${f}"
    done

    return 0
}

function rpi_dist_description() {
    echo "transfer files from dist directory to disk image"
}

function rpi_dist_help_params() {
    help_param "RPI_DIST_COPY" "array of files to copy to disk image"
    help_param "RPI_DIST_COPY_BOOT" "array of files to copy when the pi is booting"
    help_param "RPI_DIST_APPEND" "array of files to append to files on disk image"
}

# ---------------------------------------------------------------------
# check if dist file exists
function rpi_dist_exist() {
    local file="$1"
    [[ -e "${RPI_DISTDIR}/${file}" ]] && return 0
    [[ -e "${RPI_USER_DISTDIR}/${file}" ]] && return 0
    return 1
}

# copy from dist directory to root directory
function rpi_dist_cp() {
    local path="$1"
    local permissions="$2"
    local dst
    [[ -n "${path}" ]] || error "missing parameter. rpi_dist_cp"
    log "copying ${path} ..."
    # directory?
    dst="${RPI_ROOT}/$(dirname "${path}")"
    if [[ -d "${RPI_DISTDIR}/${path}" ]] ; then
        sudo cp -r "${RPI_DISTDIR}/${path}/"* "${dst}" || error "cp -r ${path}/* to ${dst}"
    elif [[ -d "${RPI_USER_DISTDIR}/${path}" ]] ; then
        sudo cp -r "${RPI_USER_DISTDIR}/${path}/"* "${dst}" || error "cp -r ${path}/* to ${dst}"
    elif [[ -f "${RPI_DISTDIR}/${path}" ]] ; then
        sudo cp "${RPI_DISTDIR}/${path}" "${dst}" || error "cp ${path} to ${dst}"
    elif [[ -f "${RPI_USER_DISTDIR}/${path}" ]] ; then
        sudo cp "${RPI_USER_DISTDIR}/${path}" "${dst}" || error "cp ${path} to ${dst}"
    else
        error "cp ${path} ${dst}"
    fi
    # chmod?
    [[ -n "${permissions}" ]] && rpi_chmod_pi "${permissions}" "${path}"
}

# copy if srcfile exists
function rpi_dist_cp_if_exist() {
    local path="$1"
    if rpi_dist_exist "${path}" ; then
        rpi_dist_cp "${path}"
        return 0
    fi
    return 1
}

# copy from dist directory after boot
function rpi_dist_cp_after_boot() {
    local path="$1"
    local permissions="$2"
    local distdir="${RPI_ROOT}/home/pi/bootstrap-dist"
    [[ -n "${path}" ]] || error "missing parameter. rpi_dist_cp_after_boot"
    log "registering ${path} for copying after boot ..."
    # create directory?
    [[ -d "${distdir}" ]] || {
        sudo mkdir "${distdir}" || error "mkdir"
        rpi_chmod_pi "0770" "/home/pi/bootstrap-dist" || error "rpi_chmod_pi"
        rpi_chown_pi "/home/pi/bootstrap-dist" || error "rpi_chown_pi"
    }
    # crate path
    sudo mkdir -p "${distdir}/$(dirname "${path}")/"
    # copy directory?
    if [[ -d "${path}" ]] ; then
        # copy to image
        sudo cp -r "${RPI_USER_DISTDIR}/${path}"/* "${distdir}/$(dirname "${path}")" || sudo cp -r "${RPI_DISTDIR}/${path}"/* "${distdir}/$(dirname "${path}")" || error "cp"
        # register copy command
        RPI_RUN_ONCE=true rpi_run "sudo cp -r \"/home/pi/bootstrap-dist/${path}/\"* \"/$(dirname "${path}")" || error "rpi_run"
    # copy file?
    else
        sudo cp -r "${RPI_USER_DISTDIR}/${path}" "${distdir}/$(dirname "${path}")/" || sudo cp -r "${RPI_DISTDIR}/${path}" "${distdir}/$(dirname "${path}")/" || error "cp"
        RPI_RUN_ONCE=true rpi_run "sudo cp \"/home/pi/bootstrap-dist/${path}\" \"/$(dirname "${path}")/\"" || error "rpi_run"
    fi
    # chmod?
    [[ -n "${permissions}" ]] && { RPI_RUN_ONCE=true rpi_run "sudo chmod -R \"${permissions}\" \"${path}\"" || error "chmod" ; }
    # chown
    RPI_RUN_ONCE=true rpi_run "sudo chown -R pi:pi \"${path}\"" || error "chown"

}
