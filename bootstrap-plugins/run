#!/bin/bash

# run command after image boot/login

# @example
# run a command once (via rc.local on boot if RPI_RUN_ON_BOOT=="true", via .bashrc on first login otherwise)
# RPI_RUN_ONCE=(
#     'echo "*********************************************************"'
#     'echo "Welcome to this install."'
#     'echo "It is $(date) and we are about to bake this pi."'
#     'echo "Please standby..."'
# )


# default options
RPI_RUN_ONCE="${RPI_RUN_ONCE:=}"
RPI_RUN_ON_BOOT="${RPI_RUN_ON_BOOT:=false}"
RPI_RUN="${RPI_RUN:=}"

# load dependencies
plugin_load append || return 1
plugin_load remove || return 1
plugin_load chown || return 1


function rpi_run_prerun() {
    { [[ -n "${RPI_RUN_ONCE}" ]] || [[ -n "${RPI_RUN}" ]] ; } || error "RPI_RUN_ONCE and RPI_RUN unset."
}

function rpi_run_run() {
    if [[ -n "${RPI_RUN_ONCE}" ]] ; then
        rpi_run_once "${RPI_RUN_ONCE[@]}"
    fi

    if [[ -n "${RPI_RUN}" ]] ; then
        rpi_run "${RPI_RUN[@]}"
    fi
}

function rpi_run_description() {
    echo "run commands on image after boot/login"
}

function rpi_run_help_vars() {
    help_var "RPI_RUN_ONCE" "command to run once (on setup)"
    help_var "RPI_RUN" "command to run on every boot/login"
    help_var "RPI_RUN_ON_BOOT" "if true, run command on boot from rc.local otherwise run on login from .bashrc"
}

# ---------------------------------------------------------------------
# run command on login
function rpi_run_on_login() {
    for cmd in "$@" ; do
        rpi_append_to_file "${cmd}" "${RPI_ROOT}/home/pi/.bashrc" || error "rpi_append_to_file"
        log "(login) cmd installed: \"${cmd}\""
    done
}

# run command once upon first login
# (you should use rpi_run_once() instead)
function rpi_run_on_first_login() {
    [[ -n "$*" ]] || error "missing argument"
    local once_script="/home/pi/.bootstrap_run_on_first_login"
    # prepare script
    if ! [[ -f "${RPI_ROOT}/${once_script}" ]] ; then
        # call script from .bashrc
        rpi_run_on_login "if [[ -f \"${once_script}\" ]] ; then echo \"executing first-time setup...\" ;  time /bin/bash -c \"${once_script} && rm ${once_script} && rm -rf /home/pi/bootstrap-dist\" ; echo \"Done. Please reboot now.\" ; fi"
        sudo touch "${RPI_ROOT}/${once_script}" || error "touch"
        sudo chmod +x "${RPI_ROOT}/${once_script}" || error "sudo chmod +x"
        sudo chown root:root "${RPI_ROOT}/${once_script}" || error "chown"
    fi
    for cmd in "$@" ; do
        # append to script
        rpi_append_to_file "echo -e '--------------------------------------\nexecuting: ${cmd}\n--------------------------------------'" "${RPI_ROOT}/${once_script}"
        rpi_append_to_file "${cmd} || exit 1"         "${RPI_ROOT}/${once_script}"
        rpi_chown_pi "${once_script}" || error "chown"
        log "(first login) cmd installed: \"${cmd}\""
    done
}

# run on every boot
function rpi_run_on_boot() {
    # remove "exit 0" at the end if it's there, so we
    # can simply append commands
    rpi_remove_pattern_from_file "exit 0" "${RPI_ROOT}/etc/rc.local" || error "remove exit from rc.local"
    for cmd in "$@" ; do
        rpi_append_to_file "${cmd}" "${RPI_ROOT}/etc/rc.local" || error "append ${cmd} to rc.local"
        log "(boot) cmd installed: \"${cmd}\""
    done
}

# run command once upon first boot
# (you should use rpi_run_once() instead)
function rpi_run_on_first_boot() {
    [[ -n "$*" ]] || error "missing argument"
    local once_script="/home/pi/.bootstrap_run_on_first_boot"
    # prepare script
    if ! [[ -f "${RPI_ROOT}/${once_script}" ]] ; then
        # call script from /etc/rc.local
        rpi_run_on_boot "if [[ -f \"${once_script}\" ]] ; then echo \"executing first-time setup...\" ; time /bin/bash -c \"${once_script} && rm ${once_script} && rm -rf /home/pi/bootstrap-dist\" ; echo \"Done. Please reboot now.\" ; fi"
        sudo touch "${RPI_ROOT}/${once_script}" || error "touch"
        sudo chmod +x "${RPI_ROOT}/${once_script}" || error "sudo chmod +x"
        sudo chown root:root "${RPI_ROOT}/${once_script}" || error "chown"
    fi
    for cmd in "$@" ; do
        # append to script
        rpi_append_to_file "echo -e '--------------------------------------\nexecuting: ${cmd}\n--------------------------------------'" "${RPI_ROOT}/${once_script}"
        rpi_append_to_file "${cmd} || exit 1"         "${RPI_ROOT}/${once_script}"
        rpi_chown_pi "${once_script}" || error "chown"
        log "(first boot) cmd installed: \"${cmd}\""
    done
}

# run command once (either on first boot or on first login)
function rpi_run_once() {
    [[ -n "$*" ]] || error "missing argument"
    if [[ "${RPI_RUN_ON_BOOT}" == "true" ]] ; then
        rpi_run_on_first_boot "$@"
    else
        rpi_run_on_first_login "$@"
    fi
}


# run command (either on boot or on login)
function rpi_run() {
    [[ -n "$*" ]] || error "missing argument"
    if [[ "${RPI_RUN_ON_BOOT}" == "true" ]] ; then
        rpi_run_on_boot "$@"
    else
        rpi_run_on_login "$@"
    fi
}
