#!/bin/bash

# download a file from the internet

# default options
RPI_DOWNLOAD_URL="${RPI_DOWNLOAD_URL:=}"
RPI_DOWNLOAD_FILE="${RPI_DOWNLOAD_FILE:=}"


rpi_download_prerun() {
    # check arguments
    [[ -n "${RPI_DOWNLOAD_URL}" ]] || error "RPI_DOWNLOAD_URL check"
    [[ -n "${RPI_DOWNLOAD_FILE}" ]] || error "RPI_DOWNLOAD_FILE check"
    # check if wget or curl is available
    command -v wget >/dev/null 2>&1 || \
    command -v curl >/dev/null 2>&1 || error "find wget or curl"
}

rpi_download_run() {
    rpi_download_file "${RPI_DOWNLOAD_URL}" "${RPI_DOWNLOAD_FILE}"
}

rpi_download_description() {
    echo "download url"
}

rpi_download_help_params() {
    help_param "RPI_DOWNLOAD_URL" "url or path to file"
    help_param "RPI_DOWNLOAD_FILE" "path to destination file"
}

# ---------------------------------------------------------------------

# download a file from the internet
function rpi_download_file() {
    local url="$1"
    local dstfile="$2"
    if [[ -z "${url}" ]] || [[ -z "${dstfile}" ]] ; then error "missing parameters. download_file" ; fi

    # got URL?
    if echo "${url}" | grep --quiet -E '^(https|http|ftp):/.+$'; then
        # download image
        if command -v wget >/dev/null 2>&1 ; then
            wget --show-progress --quiet --output-document "${dstfile}" "${url}" || error "wget"
        elif command -v curl >/dev/null 2>&1 ; then
            curl --output "${dstfile}" "${url}" || error "curl"
        else
            error "no wget or curl found. ${url} fetch"
        fi
    # treat url as path
    else
        cp "${url}" "${dstfile}" || error "cp"
    fi
}
