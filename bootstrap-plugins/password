#!/bin/bash

# change password on image

RPI_PASSWORD_USER="${RPI_PASSWORD_USER:=pi}"
RPI_PASSWORD_PW="${RPI_PASSWORD_PW:=""}"
RPI_PASSWORD_CRYPT_METHOD="${RPI_PASSWORD_CRYPT_METHOD:=SHA512}"

function rpi_password_prerun() {
    [[ -n "${RPI_PASSWORD_USER}" ]] || error "no USER set. password plugin"

    if [[ -z "${RPI_PASSWORD_PW}" ]] ; then
        # interactively get password
        echo "enter password: "
        read -r -s password_one
        echo "enter password again: "
        read -r -s password_two
        [[ "${password_one}" == "${password_two}" ]] || error "passwords don't match. password plugin"
        # use this password
        RPI_PASSWORD_PW="${password_one}"
        unset password_one
        unset password_two
        return 1
    fi

    return 0
}

function rpi_password_run() {
    echo " setting password for user \"${RPI_PASSWORD_USER}\""
    echo "${RPI_PASSWORD_USER}:${RPI_PASSWORD_PW}" | sudo chpasswd \
        --root "$(realpath "${RPI_ROOT}")" \
        --crypt-method "${RPI_PASSWORD_CRYPT_METHOD}"
}

function rpi_password_description() {
    echo "change password on image"
}

function rpi_password_help_vars() {
    local vars=(
        "RPI_PASSWORD_USER|the user to change the password from|${RPI_PASSWORD_USER}"
        "RPI_PASSWORD_PW|the password (empty for interactive input)|${RPI_PASSWORD_PW}"
        "RPI_PASSWORD_CRYPT_METHOD|crypt method|${RPI_PASSWORD_CRYPT_METHOD}"
    )
    help_for_vars "${vars[@]}"
}
