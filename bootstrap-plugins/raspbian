#!/bin/bash

# download & mount raspbian image

# @example
# download raspbian full
# RPI_RASPBIAN_FLAVOR="raspbian_full"

# @example
# use local file instead of download
# RPI_RASPBIAN_URL="/path/to/downloaded.zip"

# @example use lite 64 bit version for raspberry pi 4
# RPI_RASPBIAN_FLAVOR="raspios_lite_arm64"

# default options
RPI_RASPBIAN_FLAVOR="${RPI_RASPBIAN_FLAVOR:=raspbian_lite}"
RPI_RASPBIAN_URL="${RPI_RASPBIAN_URL:=https://downloads.raspberrypi.org/${RPI_RASPBIAN_FLAVOR}_latest}"

# load dependencies
plugin_load download || return 1
plugin_load loopback || return 1


function rpi_raspbian_prerun() {
    # check arguments
    [[ -n "${RPI_RASPBIAN_FLAVOR}" ]] || error "RPI_RASPBIAN_FLAVOR check"
    [[ -n "${RPI_RASPBIAN_URL:=}" ]] || error "RPI_RASPBIAN_URL check"
}

function rpi_raspbian_run() {
    local name="raspbian-${RPI_RASPBIAN_FLAVOR}.img"
    local dest="${RPI_WORKDIR}/${name}"

    log "downloading ${RPI_RASPBIAN_URL} ..."

    # already downloaded?
    if ! [[ -f "${dest}" ]] ; then
      local tmpfile
      tmpfile="$(TMPDIR=${RPI_TMPDIR} mktemp || error mktemp)"
      # download
      rpi_download_file "${RPI_RASPBIAN_URL}" "${tmpfile}" || error "download ${_}"
      # detect archive type
      suffix="$(file --extension ${tmpfile})"
      # extract suffix
      suffix="${suffix##*: }"

      # extract
      case "${suffix}" in

        "xz")
            log "unxzing \"${tmpfile}\""
            # append suffix to filename
            mv "${tmpfile}" "${tmpfile}.${suffix}" || error mv
            xz --decompress "${tmpfile}.${suffix}" || error unxz
            mv "${tmpfile}" "${dest}" || error mv
            ;;

        "zip")
            log "unzipping \"${tmpfile}\""
            unzip "${tmpfile}" || error unzip
            sync
            rm -f "${tmpfile}"
            mv ./*raspbian-*.img "${dest}" || error mv
            ;;

        *)
            error "unknown filetype: ${suffix}"
            ;;
      esac


    fi

    # mount image
    log "setting up loopback for ${dest}"
    rpi_loopback_setup "${dest}" || return 1
    rpi_loopback_mount || return 1
    # read os-release
    # (shellcheck cannot source non-constant source)
    # shellcheck disable=SC1091
    # shellcheck disable=SC1090
    . "${RPI_ROOT}/etc/os-release"

    return 0
}

function rpi_raspbian_postrun() {
    log "cleaning up..."
    # cleanup os-release
    unset PRETTY_NAME
    unset NAME
    unset VERSION_ID
    unset VERSION
    unset ID
    unset ID_LIKE
    unset HOME_URL
    unset SUPPORT_URL
    unset BUG_REPORT_URL
    # tear down loopback device & unmount partitions
    rpi_loopback_umount
    rpi_loopback_cleanup
}

function rpi_raspbian_description() {
    echo "download raspbian image"
}

function rpi_raspbian_help_params() {
    help_param "RPI_RASPBIAN_FLAVOR" "flavor of raspbian to use: lite or full"
    help_param "RPI_RASPBIAN_URL" "alternative download URL or local path to downloaded zip"
}
