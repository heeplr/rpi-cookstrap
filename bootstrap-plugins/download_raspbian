#!/bin/bash

# download & mount raspbian image

RPI_DOWNLOAD_RASPBIAN_FLAVOR="${RPI_DOWNLOAD_RASPBIAN_FLAVOR:=lite}"
RPI_DOWNLOAD_RASPBIAN_URL="${RPI_DOWNLOAD_RASPBIAN_URL:=https://downloads.raspberrypi.org/raspbian_${RPI_DOWNLOAD_RASPBIAN_FLAVOR}_latest}"


function rpi_download_raspbian_prerun() {
    true
}

function rpi_download_raspbian_run() {

    local name="raspbian-${RPI_DOWNLOAD_RASPBIAN_FLAVOR}.img"
    local dest="${RPI_WORKDIR}/${name}"

    warn "downloading ${RPI_DOWNLOAD_RASPBIAN_URL} ..."

    # already downloaded?
    if ! [[ -f "${dest}" ]] ; then
      local tmpfile
      tmpfile="$(TMPDIR=${RPI_TMPDIR} mktemp || error mktemp)"
      # download
      download_file "${RPI_DOWNLOAD_RASPBIAN_URL}" "${tmpfile}"
      # unzip
      warn "unzipping \"${tmpfile}\""
      unzip "${tmpfile}" || error unzip
      sync
      rm "${tmpfile}" || error rm
      mv ./*raspbian-*.img "${dest}" || error mv
    fi

    # mount image
    echo "setting up loopback for ${dest}"
    RPI_IMG_DEV="$(loopback_setup "${dest}")" || error "loopback setup"
    mount_image "${RPI_IMG_DEV}" || error "image mount"

    # set image filename globally
    RPI_IMG_NAME="${dest}"
}

function rpi_download_raspbian_postrun() {
    echo "cleaning up..."
    umount_image
    loopback_cleanup "${RPI_IMG_DEV}"
}

function rpi_download_raspbian_description() {
    echo "download raspbian image"
}

function rpi_download_raspbian_help_vars() {
    local vars=(
        "RPI_DOWNLOAD_RASPBIAN_FLAVOR|flavor of raspbian to use: lite or full|${RPI_DOWNLOAD_RASPBIAN_FLAVOR}"
        "RPI_DOWNLOAD_RASPBIAN_URL|alternative download URL or local path to downloaded zip|${RPI_DOWNLOAD_RASPBIAN_URL}"
    )
    help_for_vars "${vars[@]}"
}

